/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(!headA||!headB)
            return NULL;
        int a=1, b=1;
        ListNode* curA = headA;
        ListNode* curB = headB;
        while(curA->next)
        {
            curA=curA->next;
            a++;
        }
        while(curB->next)
        {
            curB=curB->next;
            b++;
        }
        if(a>b)
            for(int i=0;i<a-b;i++)
            {
                headA=headA->next;
            }
        else
            for(int i=0;i<b-a;i++)
            {
                headB=headB->next;
            }
        while(headA&&headB&&headA!=headB)
        {
            headA=headA->next;
            headB=headB->next;
        }
        return (headA&&headB?headA:NULL);
        
    }
};
