/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(!head||k==1)
            return head;
        ListNode* dummy = new ListNode(-1);
        dummy->next=head;
        ListNode* pre=dummy;
        ListNode* next=head;
        int i=0;
        while(next)
        {
            i++;
            if(i%k==0)
            {
                pre=reverse(pre, next->next);
                next=pre->next;
            }
            else
            {
                next=next->next;
            }
        }
        return dummy->next;
        
        
    }
    ListNode* reverse(ListNode* pre, ListNode* next)
    {
        ListNode* last=pre->next, *cur=last->next;
        while(cur!=next)
        {
            last->next=cur->next;
            cur->next=pre->next;
            pre->next=cur;
            cur=last->next;
        }
        return last;
    }
};
